{"version":3,"file":"static/js/455.10352c59.chunk.js","mappings":"gMACA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2B,kBCuCnI,EArCkB,SAACA,GACjB,IAAMC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAUrB,OACE,0BACE,kBAAME,UAAWC,EAAcC,SAXT,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAgBR,EAAeS,QAAQC,MACvCC,EAAcT,EAAaO,QAAQC,MAIzCX,EAAMa,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAG+D,UACxDZ,EAAMgB,YACL,gBAAKZ,UAAWC,EAAgB,UAC9B,SAACY,EAAA,EAAc,OAInB,iBAAKb,UAAWC,EAAgB,WAC9B,kBAAOa,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKpB,QAEtC,iBAAKG,UAAWC,EAAgB,WAC9B,kBAAOa,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKlB,QAEpC,gBAAKC,UAAWC,EAAgB,UAC9B,mBAAQD,UAAU,MAAK,6BAKjC,E,2BCbA,EAnBiB,WACf,IAAMmB,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACrBC,QAAQC,IAAIF,IAEZG,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFL,EAAS,UAEb,GAAG,CAACK,EAAQL,IAOZ,OAAO,SAAC,EAAS,CAACV,WALM,SAACmB,GACvBL,EAAYK,EAEd,GAGF,C","sources":["webpack://quote-router-v6-project/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","components/pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__qCfPW\",\"loading\":\"QuoteForm_loading__XQIYA\",\"control\":\"QuoteForm_control__YV4NH\",\"actions\":\"QuoteForm_actions__9r8Au\"};","import LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./QuoteForm.module.css\";\r\nimport { useRef } from \"react\";\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  };\r\n  return (\r\n    <div>\r\n      <form className={classes.form} onSubmit={submitFormHandler}>\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"author\">Author</label>\r\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"text\">Text</label>\r\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button className=\"btn\">Add Quote</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import QuoteForm from \"./../quotes/QuoteForm\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport { addQuote } from \"../../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const navigate = useNavigate();\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  console.log(status);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/quotes\");\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHundler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n    // navigate(\"/quotes\");\r\n  };\r\n\r\n  return <QuoteForm onAddQuote={addQuoteHundler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n"],"names":["props","authorInputRef","useRef","textInputRef","className","classes","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","navigate","useNavigate","useHttp","addQuote","sendRequest","status","console","log","useEffect","quoteData"],"sourceRoot":""}