{"version":3,"file":"static/js/749.44065c31.chunk.js","mappings":"gMACA,EAAwB,gC,SCUxB,EATyB,SAACA,GACxB,OACE,oBAAQC,UAAWC,EAAc,WAC/B,uBAAIF,EAAMG,QACV,gCAAaH,EAAMI,WAGzB,E,6CCqDA,EAtDoB,WAClB,IAAMC,GAASC,EAAAA,EAAAA,MACPC,EAAYF,EAAZE,QACR,GAKIC,EAAAA,EAAAA,GAAQC,EAAAA,IAAgB,GAJ1BC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAW,EAAjBC,KACAC,EAAK,EAALA,MASF,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAYH,EACd,GAAG,CAACG,EAAaH,IAEF,YAAXI,GAEA,gBAAKV,UAAU,WAAU,UACvB,SAACe,EAAA,EAAc,MAKjBF,GACK,cAAGb,UAAU,WAAU,SAAEa,IAG7BF,EAAYT,MAIf,iCACE,SAAC,EAAgB,CAACA,KAAMS,EAAYT,KAAMC,OAAQQ,EAAYR,UAC9D,SAAC,KAAM,WACL,SAAC,KAAK,CACJa,KAAI,IACJC,SACE,gBAAKjB,UAAU,WAAU,UACvB,SAAC,KAAI,CACHA,UAAU,YACVkB,GAAE,kBAAad,EAAOE,QAAO,aAAY,kCAQnD,SAAC,KAAM,QApBF,yCAuBX,C","sources":["webpack://quote-router-v6-project/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__qk+UJ\"};","import classes from \"./HighlightedQuote.module.css\";\r\n\r\nconst HighlightedQuote = (props) => {\r\n  return (\r\n    <figure className={classes.quote}>\r\n      <p>{props.text}</p>\r\n      <figcaption>{props.author}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default HighlightedQuote;\r\n","import { Outlet, useParams } from \"react-router\";\r\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\r\nimport { Link, Route, Routes } from \"react-router-dom\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport { getSingleQuote } from \"./../../lib/api\";\r\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No Quote found</p>;\r\n  }\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Routes>\r\n        <Route\r\n          path={`/`}\r\n          element={\r\n            <div className=\"centered\">\r\n              <Link\r\n                className=\"btn--flat\"\r\n                to={`/quotes/${params.quoteId}/comments`}\r\n              >\r\n                Load Comments\r\n              </Link>\r\n            </div>\r\n          }\r\n        />\r\n      </Routes>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"names":["props","className","classes","text","author","params","useParams","quoteId","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","path","element","to"],"sourceRoot":""}