{"version":3,"file":"static/js/640.c33dd3b8.chunk.js","mappings":"yMACA,EAAuB,wB,SCkBvB,EAhBkB,SAACA,GACjB,OAAO,+BACJ,gBAAIC,UAAWC,EAAa,WAC3B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAaL,EAAMM,IAAK,iCAKtD,EChBA,EAAuB,wBAAvB,EAAyD,2B,SC8CzD,EAhCkB,SAACN,GACjB,IAXkBO,EAAQC,EAWpBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAiB,eAApCC,GAAF,KAAiB,MAI9BC,EAAiD,QAFnC,IAAIC,gBAAgBL,EAASM,QAEVC,IAAI,QAErCC,GAlBYV,EAkBcP,EAAMO,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAgBA,OACE,iBAAKL,UAAWC,EAAgB,WAC9B,oBAAQmB,QALiB,WAC3BT,EAAgB,CAAEM,KAAML,EAAqB,OAAS,OACxD,EAG0C,kBAC9BA,EAAqB,aAAe,gBAE5C,eAAIZ,UAAWC,EAAa,SACzBe,EAAaK,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERjB,GAAIiB,EAAMjB,GACVF,OAAQmB,EAAMnB,OACdD,KAAMoB,EAAMpB,MAHPoB,EAAMjB,GAIX,QAKZ,E,oCC5CA,EAA2B,iCCY3B,EAXuB,WACrB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACG,GAAG,aAAaJ,UAAU,MAAK,2BAK3C,EC0BA,EA/BkB,WAChB,OAKIuB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAJxBC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAY,EAAlBC,KACAC,EAAK,EAALA,MAQF,OANAC,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WACRP,GACF,GAAG,CAACA,IAEW,YAAXC,GAEA,gBAAK1B,UAAU,WAAU,UACvB,SAACiC,EAAA,EAAc,MAKjBJ,GACK,cAAG7B,UAAU,mBAAkB,SAAE6B,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaO,QAGtD,SAAC,EAAS,CAAC5B,OAAQqB,KAFjB,SAAC,EAAc,GAG1B,C","sources":["webpack://quote-router-v6-project/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://quote-router-v6-project/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://quote-router-v6-project/./src/components/quotes/NotquotesFound.module.css?fc38","components/quotes/NotQuotesFound.js","components/pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__w8YOW\"};","import { Link } from \"react-router-dom\";\r\nimport classes from \"./QuoteItem.module.css\";\r\n\r\nconst QuoteItem = (props) => {\r\n  return <>\r\n     <li className={classes.item}>\r\n      <figure>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <figcaption>{props.author}</figcaption>\r\n      </figure>\r\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\r\n        View Fullscreen\r\n      </Link>\r\n    </li>\r\n  </>;\r\n};\r\n\r\nexport default QuoteItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__ydjAz\",\"sorting\":\"QuoteList_sorting__9R7KH\"};","import QuoteItem from \"./QuoteItem\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport classes from \"./QuoteList.module.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n  const location = useLocation();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\"; //return true/false\r\n\r\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\r\n\r\n  const changeSortingHandler = () => {\r\n    setSearchParams({ sort: isSortingAscending ? \"desc\" : \"asc\" });\r\n  };\r\n  return (\r\n    <div className={classes.sorting}>\r\n      <button onClick={changeSortingHandler}>\r\n        Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\r\n      </button>\r\n      <ul className={classes.list}>\r\n        {sortedQuotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NotquotesFound_noquotes__hXDMm\"};","import { Link } from \"react-router-dom\";\r\nimport classes from \"./NotquotesFound.module.css\";\r\nconst NotQuotesFound = () => {\r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No quotes found!</p>\r\n      <Link to=\"/new-quote\" className=\"btn\">\r\n        Add a Quote\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotQuotesFound;\r\n","import QuoteList from \"../quotes/QuoteList\";\r\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport { getAllQuotes } from \"./../../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport NotQuotesFound from \"../quotes/NotQuotesFound\";\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  console.log(loadedQuotes);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NotQuotesFound />;\r\n  }\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"names":["props","className","classes","text","author","to","id","quotes","ascending","location","useLocation","useSearchParams","setSearchParams","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","onClick","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","console","log","useEffect","LoadingSpinner","length"],"sourceRoot":""}